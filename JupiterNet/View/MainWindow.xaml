<Window x:Class="JupiterNet.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JupiterNet.View"        
        xmlns:viewModel="clr-namespace:JupiterNet.ViewModel" 
        mc:Ignorable="d"
        Title="{Binding DocumentTitle, StringFormat=Jupyter.net{0}}"
        Height="450" Width="800" WindowState="Maximized" >
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <local:KeyConverter x:Key="KeyConverter" />

        <DataTemplate  x:Key="InputCellTemplate">
            <Border HorizontalAlignment="Stretch"
                    x:Name="Bd" 
                    Background="{Binding TemplatedParent.Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    BorderBrush="{Binding TemplatedParent.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    BorderThickness="{Binding TemplatedParent.BorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    Padding="{Binding TemplatedParent.Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    Margin="5,10,0,0">
                <Border.InputBindings>
                    <MouseBinding MouseAction="LeftDoubleClick" 
                                  Command="{Binding DataContext.BeginEditCellCommand, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
                </Border.InputBindings>
                <Grid Margin="10,0" HorizontalAlignment="Stretch" MinHeight="40">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="StatusText"
                               Grid.Column="0" Text="{Binding Id}" Margin="0,10" FontWeight="Bold" FontFamily="Consolas" FontSize="14"/>
                    <TextBlock Grid.Column="1" Text="{Binding Value}" Margin="30,10" FontFamily="Consolas" FontSize="14" />
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=Status}" Value="{x:Static viewModel:NotebookVM+CellEveluationStatus.Running}">
                    <Setter TargetName="StatusText" Property="Foreground" Value="orange" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=Status}" Value="{x:Static viewModel:NotebookVM+CellEveluationStatus.Completed}">
                    <Setter TargetName="StatusText" Property="Foreground" Value="green" />
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=Status}" Value="{x:Static viewModel:NotebookVM+CellEveluationStatus.Error}">
                    <Setter TargetName="StatusText" Property="Foreground" Value="red" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate  x:Key="TextCellTemplate">
            <Border HorizontalAlignment="Stretch"
                    x:Name="Bd"
                    Background="{Binding TemplatedParent.Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    BorderBrush="{Binding TemplatedParent.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    BorderThickness="{Binding TemplatedParent.BorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    Padding="{Binding TemplatedParent.Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    Margin="75,0, 0, 0">
                <TextBlock x:Name="valueText" Text="{Binding Value}" Margin="20,10" FontFamily="Consolas" FontSize="14"/>
            </Border>

            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsError}" Value="true">
                    <Setter TargetName="valueText" Property="Foreground" Value="red" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate  x:Key="ImageCellTemplate">
            <Border HorizontalAlignment="Stretch"
                    x:Name="Bd" 
                    Background="{Binding TemplatedParent.Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    BorderBrush="{Binding TemplatedParent.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    BorderThickness="{Binding TemplatedParent.BorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    Padding="{Binding TemplatedParent.Padding, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}}"
                    Margin="75,0, 0, 0">
                <Image Source="{Binding Value}"/>
            </Border>
        </DataTemplate>

        <DataTemplate  x:Key="CompleteTemplate">
            <Border Height="20">
                <TextBlock Text="{Binding}" FontFamily="Consolas" FontSize="14"
                           MouseDown="TextBlock_MouseDown"
                           KeyDown="LstComplete_KeyDown"/>
            </Border>
        </DataTemplate>

        <local:CellsTemplateSelector x:Key="CellsTemplateSelector" 
            InputCellTemplate="{StaticResource InputCellTemplate}"
            TextCellTemplate="{StaticResource TextCellTemplate}"
            ImageCellTemplate="{StaticResource ImageCellTemplate}"
            />
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCommand}"/>
        <KeyBinding Key="F2" Command="{Binding BeginEditCellCommand }"/>
        <KeyBinding Key="F3" Command="{Binding ToggleMultilineModeCommand }"/>
        <KeyBinding Key="F5" Command="{Binding RunCellCommand }"/>
        <KeyBinding Key="F6" Command="{Binding KernelInterruptCommand }"/>

        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewNotebookCommand }"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenNotebookCommand }"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveNotebookCommand }"/>

        <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding CutCommand }"/>
        <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding CopyCommand }"/>
        <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding PasteCommand }"/>

        <KeyBinding Modifiers="Alt" Key="Up" Command="{Binding MoveCellUpCommand }"/>
        <KeyBinding Modifiers="Alt" Key="Down" Command="{Binding MoveCellDownCommand }"/>
    </Window.InputBindings>

    <local:AdjustableGrid InitialRowsSize="{Binding Multiline}"
                   FocusManager.FocusedElement="{Binding ElementName=inputCommand}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto" MinHeight="42" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!--Toolbar-->
        <Ribbon Margin="0,-22,0,0"  KeyboardNavigation.TabIndex="0" KeyDown="Ribbon_KeyDown">

            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu Visibility="Collapsed">
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>

            <RibbonTab Header="Home">
                <RibbonGroup Header="File">
                    <RibbonButton Label="New" LargeImageSource="Images/icons8-new-file-100.png"
                                  ToolTip="New (Ctrl + N)"
                                  Command="{Binding NewNotebookCommand}"/>
                    <RibbonButton Label="Open" LargeImageSource="Images/icons8-opened-folder-100.png"
                                  ToolTip="Open (Ctrl + O)"
                                  Command="{Binding OpenNotebookCommand}"/>
                    <RibbonButton Label="Save" LargeImageSource="Images/icons8-save-100.png"
                                  ToolTip="Save (Ctrl + S)"
                                  Command="{Binding SaveNotebookCommand}"/>
                    <RibbonButton Label="Save As" LargeImageSource="Images/icons8-save-as-100.png"
                                  ToolTip="Save As"
                                  Command="{Binding SaveAsNotebookCommand}"/>
                </RibbonGroup>
                <RibbonGroup Header="Edit">
                    <RibbonButton Label="Cut" SmallImageSource="Images/icons8-cut-50.png"
                                  ToolTip="Cut (Ctrl + X)"
                                  Command="{Binding CutCommand}"/>
                    <RibbonButton Label="Copy" SmallImageSource="Images/icons8-copy-50.png"
                                  ToolTip="Copy (Ctrl + C)"
                                  Command="{Binding CopyCommand}"/>
                    <RibbonButton Label="Paste" SmallImageSource="Images/icons8-paste-50.png"
                                  ToolTip="Paste (Ctrl + V)"
                                  Command="{Binding PasteCommand}"/>
                </RibbonGroup>
                <RibbonGroup Header="Insert">
                    <RibbonToggleButton Label="Multiline mode" LargeImageSource="Images/icons8-new-document-100.png"
                                        ToolTip="Enable/disable multiline mode (F3)"
                                        IsChecked="{Binding Multiline}"/>
                    <RibbonButton Label="Execute script" LargeImageSource="Images/icons8-run-command-100.png"
                                  ToolTip="Execute a Python script file"
                                  Command="{Binding RunScriptCommand}"/>
                </RibbonGroup>
                <RibbonGroup Header="Cell">
                    <RibbonButton Label="Run" LargeImageSource="Images/icons8-running-100.png"
                                  ToolTip="Run selected cell (F5)"
                                  Command="{Binding RunCellCommand}"/>
                    <RibbonButton Label="Edit" LargeImageSource="Images/icons8-edit-row-100.png"
                                  ToolTip="Edit selected cell (double click or F2)"
                                  Command="{Binding BeginEditCellCommand}"/>
                    <RibbonButton Label="Delete" LargeImageSource="Images/icons8-delete-100.png"
                                  ToolTip="Delete selected cell (canc)"
                                  Command="{Binding DeleteCommand}"/>
                    <RibbonButton Label="Move up" SmallImageSource="Images/icons8-up-50.png"
                                  ToolTip="Move selected cell up (Alt + up)"
                                  Command="{Binding MoveCellUpCommand}"/>
                    <RibbonButton Label="Move down" SmallImageSource="Images/icons8-down-arrow-50.png"
                                  ToolTip="Move selected cell down (Alt + down)"
                                  Command="{Binding MoveCellDownCommand}"/>
                </RibbonGroup>
                <RibbonGroup Header="Kernel">
                    <RibbonButton Label="Run all" LargeImageSource="Images/icons8-todo-list-100.png"
                                  Command="{Binding RunAllCellsCommand}"
                                  ToolTip="Run all cells"/>
                    <RibbonButton Label="Interrupt" LargeImageSource="Images/icons8-cancel-100.png"
                                  Command="{Binding KernelInterruptCommand}"
                                  ToolTip="Abort current evaluation"/>
                </RibbonGroup>
                <RibbonGroup Header="Other">
                    <RibbonButton Label="About" LargeImageSource="Images/icons8-help-100.png"
                                  Command="{Binding AboutCommand}"
                                  ToolTip="About"/>
                </RibbonGroup>                
            </RibbonTab>
        </Ribbon>

        <!--Input box-->
        <Border Grid.Row="1" Style="{StaticResource CodeInputContainerStyle}"  KeyboardNavigation.TabIndex="1"
                FocusManager.FocusedElement="{Binding ElementName=inputCommand}">
            <Grid Margin="23,6">
                <Grid.InputBindings>
                    <KeyBinding Modifiers="Ctrl" Key="Space" Command="{Binding CompleteCodeCommand }"/>
                </Grid.InputBindings>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="inputCommand"                          
                         Style="{StaticResource CodeInputTextBoxStyle}"
                         IsTabStop="true">
                    <TextBox.InputBindings>
                        <KeyBinding Key="{Binding Multiline, Converter={StaticResource KeyConverter}, ConverterParameter=Enter}"
                                    Command="{Binding InsertOrCompleteEditCommand}"/>
                        <KeyBinding Key="Enter"
                                    Modifiers="Shift"
                                    Command="{Binding InsertCodeCommand}"/>
                        <KeyBinding Key="Enter"
                                    Modifiers="Alt"
                                    Command="{Binding InsertCommentCommand}"/>
                        <KeyBinding Key="Esc"
                                    Command="{Binding CancelEditCellCommand}"/>
                    </TextBox.InputBindings>
                </TextBox>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button Width="30" Height="30"
                            Command="{Binding InsertCodeCommand}"
                            Visibility="{Binding InsertMode, Converter={StaticResource BoolToVisConverter}}"
                            VerticalAlignment="Bottom" HorizontalAlignment="Right"
                            Margin="6,0,0,0"
                            ToolTip="Execute (Shift+Enter)"
                            IsTabStop="False">
                        <Image Source="Images/icons8-play-50.png"/>
                    </Button>
                    <Button Width="30" Height="30"
                            Command="{Binding InsertCommentCommand}"
                            Visibility="{Binding InsertMode, Converter={StaticResource BoolToVisConverter}}"
                            VerticalAlignment="Bottom" HorizontalAlignment="Right"
                            Margin="6,0,0,0"
                            ToolTip="Insert comment (Alt+Enter)"
                            IsTabStop="False">
                        <Image Source="Images/icons8-note-50.png"/>
                    </Button>
                    <Button Width="30" Height="30"
                            Command="{Binding CompleteEditCellCommand}"
                            Visibility="{Binding EditMode, Converter={StaticResource BoolToVisConverter}}"
                            VerticalAlignment="Bottom" HorizontalAlignment="Right"
                            Margin="6,0,0,0"
                            ToolTip="Change (Shift+Enter)"
                            IsTabStop="False">
                        <Image Source="Images/icons8-checkmark-50.png"/>
                    </Button>
                    <Button Width="30" Height="30"
                            Command="{Binding CancelEditCellCommand}"
                            Visibility="{Binding EditMode, Converter={StaticResource BoolToVisConverter}}"
                            VerticalAlignment="Bottom" HorizontalAlignment="Right"
                            Margin="6,0,0,0"
                            ToolTip="Cancel (Esc)"
                            IsTabStop="False">
                        <Image Source="Images/icons8-cancel-50.png"/>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>

        <GridSplitter Grid.Row="1" Height="4"
                      KeyboardNavigation.IsTabStop="False"
                      VerticalAlignment="Bottom"
                      HorizontalAlignment="Stretch"
                      Background="#ABADB3"
                      Visibility="{Binding Multiline, Converter={StaticResource BoolToVisConverter}}" />

        <!--Notebook -->
        <ListBox x:Name="NotebookView" Grid.Row="2"
            KeyboardNavigation.TabIndex="2"
            ItemsSource="{Binding CurrentNotebook.Cells}"
            SelectedItem="{Binding SelectedCell}"
            local:ListUtils.IsEditing="{Binding EditMode}"
            ItemTemplateSelector="{StaticResource CellsTemplateSelector}"
            Style="{StaticResource NotebookListBox}" IsTabStop="True"
            />

        <StatusBar Grid.Row="3">
            <StatusBarItem HorizontalAlignment="Left">
                <TextBlock Text="{Binding KernelName}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding KernelStatus}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding DocumentCompleteFileName}"/>
            </StatusBarItem>
        </StatusBar>

        <Popup x:Name="popComplete"
               Height="Auto" Width="150"
               StaysOpen="False" 
               Placement="Bottom" 
               IsOpen="false"
               HorizontalAlignment="Left"
               MaxHeight="200">
            <Grid Width="Auto" Height="Auto">
                <ListBox x:Name="lstComplete"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         ScrollViewer.VerticalScrollBarVisibility="Visible"
                         SelectedIndex="0"
                         IsTextSearchEnabled="True"
                         ItemTemplate="{StaticResource CompleteTemplate}"
                         ItemsSource="{Binding CompleteWords}"
                         KeyDown="LstComplete_KeyDown"
                         />
            </Grid>
        </Popup>
    </local:AdjustableGrid>
</Window>
